# .github/workflows/pr-build.yml

name: Build and Test on Pull Request

on:
  pull_request:
    types: [opened, synchronize]
    branches: [ main ]

jobs:
  build-and-comment:
    environment: Dev
    runs-on: ubuntu-latest
    # Add permissions for the GITHUB_TOKEN
    permissions:
      checks: write
      pull-requests: write

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # --- NEW STEP TO VALIDATE LABELS ---
      - name: Check for Version Label
        if: "! (contains(github.event.pull_request.labels.*.name, 'major') || contains(github.event.pull_request.labels.*.name, 'minor') || contains(github.event.pull_request.labels.*.name, 'patch'))"
        run: |
          echo "‚ùå Error: Pull Request must have a 'major', 'minor', or 'patch' label."
          exit 1

      # --- Run tests with coverage ---
      - name: Run Unit Tests with Coverage
        run: |
          npm ci
          npm run test

      # --- Debug coverage files ---
      - name: Debug Coverage Files
        run: |
          echo "Checking for coverage files..."
          ls -la coverage/ || echo "Coverage directory not found"
          if [ -f coverage/coverage-summary.json ]; then
            echo "‚úÖ coverage-summary.json found"
            cat coverage/coverage-summary.json
          else
            echo "‚ùå coverage-summary.json not found"
          fi
          if [ -f coverage/coverage-final.json ]; then
            echo "‚úÖ coverage-final.json found"
            echo "File size: $(wc -c < coverage/coverage-final.json) bytes"
          else
            echo "‚ùå coverage-final.json not found"
          fi

      # --- Generate full coverage markdown (per-file breakdown) ---
      - name: Generate Coverage Markdown
        id: coverage
        uses: MishaKav/jest-coverage-comment@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-summary-path: ./coverage/coverage-summary.json
          coverage-final-path: ./coverage/coverage-final.json
          create-new-comment: false   # don't post a separate comment
          hide-comment: true          # just generate markdown
          output: report              # expose markdown as steps.coverage.outputs.report

      # --- Docker build & push ---
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
            
      - name: Build and Push Development Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop:pr-${{ github.event.pull_request.number }}
            ${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop:latest

      # Smoke test the container
      - name: Smoke Test Container
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create a temporary .env file for the test
          cat <<EOF > .env.test
          DISCORD_API_KEY=${{ secrets.DISCORD_API_KEY }}
          DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }}
          EOF

          # Run the container in the background
          docker run -d \
            --name bongbot-test \
            --env-file ./.env.test \
            ${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop:pr-${{ github.event.pull_request.number }}

          echo "Waiting for 15 seconds to let the container initialize..."
          sleep 15

          # Check if the container is still running.
          if [ "$(docker ps -q -f name=bongbot-test)" ]; then
            echo "‚úÖ Smoke test passed: Container is running."
            docker stop bongbot-test
            docker rm bongbot-test
          else
            echo "‚ùå Smoke test failed: Container exited unexpectedly."
            LOGS=$(docker logs bongbot-test 2>&1)
            docker rm bongbot-test
            BODY="**Smoke Test Failed** ‚ùå
            The container exited unexpectedly during the smoke test. Here are the logs:
            \`\`\`
            ${LOGS}
            \`\`\`"

            gh pr comment ${{ github.event.pull_request.number }} --body "$BODY"
            exit 1
          fi

      # Start service on server for user testing (requires bongbot-develop.service to be set up)
      - name: SSH and Start Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            if systemctl is-active --quiet bongbot-develop; then
              echo "‚úÖ Service 'bongbot-develop' is running. Restarting service..."
              sudo systemctl restart bongbot-develop
            else
              echo "‚ÑπÔ∏è Service 'bongbot-develop' is not running. Starting service..."
              sudo systemctl start bongbot-develop
            fi

      # Create a new comment with the image details
      - name: Create New Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **BongBot Development Build** üöÄ

            A new Docker image has been pushed for this pull request.
            BongBot Dev is running for 1 hour after the build. If you want to start it again, re-run this workflow.

            - **Image:** `${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop`
            - **Tag:** `pr-${{ github.event.pull_request.number }}`

            You can pull the image using:
            ```
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop:pr-${{ github.event.pull_request.number }}
            ```
            [View on Docker Hub](https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop/tags)

            <details>
            <summary>Coverage Report (click to expand)</summary>

            ${{ steps.coverage.outputs.report || steps.fallback_coverage.outputs.report || '‚ùå Coverage report not available' }}

            </details>
