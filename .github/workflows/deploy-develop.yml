# .github/workflows/pr-build.yml

name: Build and Test on Pull Request

on:
  pull_request:
    types: [opened, synchronize]
    branches: [ main ]

jobs:
  build-and-comment:
    environment: Dev
    runs-on: ubuntu-latest
    # Add permissions for the GITHUB_TOKEN
    permissions:
      pull-requests: write

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Delete outdated comments from previous runs
      - name: Find Previous Comment
        id: find-comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ''

      - name: Delete Previous Comment
        if: steps.find-comment.outputs.comment-id != ''
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.find-comment.outputs.comment-id }}
            })

      # Build and push the development image
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
            
      - name: Build and Push Development Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop:pr-${{ github.event.pull_request.number }}
            ${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop:latest

      # Smoke test the container
      - name: Smoke Test Container
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create a temporary .env file for the test
          cat <<EOF > .env.test
          DISCORD_API_KEY=${{ secrets.DISCORD_API_KEY }}
          EOF

          # Run the container in the background
          docker run -d \
            --name bongbot-test \
            --env-file ./.env.test \
            ${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop:pr-${{ github.event.pull_request.number }}

          echo "Waiting for 15 seconds to let the container initialize..."
          sleep 15

          # Check if the container is still running.
          if [ "$(docker ps -q -f name=bongbot-test)" ]; then
            echo "✅ Smoke test passed: Container is running."
            docker stop bongbot-test
            docker rm bongbot-test
          else
            echo "❌ Smoke test failed: Container exited unexpectedly."
            docker rm bongbot-test
            BODY="**Smoke Test Failed** ❌
            LOGS=$(docker logs bongbot-test 2>&1)
            The container exited unexpectedly during the smoke test. Here are the logs:
            \`\`\`
            ${LOGS}
            \`\`\`"

            gh pr comment ${{ github.event.pull_request.number }} --body "$BODY"
            exit 1
          fi

      # Start service on server for user testing (requires bongbot-develop.service to be set up)
      - name: SSH and Start Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo systemctl start bongbot-develop

      # Create a new comment with the image details
      - name: Create New Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **BongBot Development Build** 🚀

            A new Docker image has been pushed for this pull request.
            BongBot Dev is running for 1 hour after the build. If you want to start it again, re-run this workflow.

            - **Image:** `${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop`
            - **Tag:** `pr-${{ github.event.pull_request.number }}`

            You can pull the image using:
            ```
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop:pr-${{ github.event.pull_request.number }}
            ```
            [View on Docker Hub](https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/bongbot-develop/tags)
