# .github/workflows/deploy.yml
name: Create Release and Deploy BongBot

on:
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  deploy:
    if: |
      github.event.pull_request.merged == true &&
      (contains(github.event.pull_request.labels.*.name, 'major') ||
       contains(github.event.pull_request.labels.*.name, 'minor') ||
       contains(github.event.pull_request.labels.*.name, 'bug'))
    environment: Prod
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine Version Bump Level
        id: get_level
        run: |
          if contains(github.event.pull_request.labels.*.name, 'major'); then
            echo "level=major" >> $GITHUB_OUTPUT
          elif contains(github.event.pull_request.labels.*.name, 'minor'); then
            echo "level=minor" >> $GITHUB_OUTPUT
          elif contains(github.event.pull_request.labels.*.name, 'bug'); then
            echo "level=patch" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Get next version (Dry Run)
        id: get_version
        uses: anothrNick/github-tag-action@1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ steps.get_level.outputs.level }}
          with_v: true
          dry_run: true

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bongbot:${{ steps.get_version.outputs.new_tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/bongbot:latest

      # --- The following steps only run after a successful deployment, but before restart to make sure version tag is available for infocard ---
      - name: Push new version tag
        if: success()
        uses: anothrNick/github-tag-action@1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ steps.get_level.outputs.level }}
          with_v: true

      - name: Create GitHub Release
        if: success()
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.new_tag }} # Use the tag calculated at the start
          release_name: Release ${{ steps.get_version.outputs.new_tag }}
          body: |
            New release based on PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}
            This version has been successfully deployed to production.
          draft: false
          prerelease: false

      - name: SSH and Restart Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo systemctl restart bongbot